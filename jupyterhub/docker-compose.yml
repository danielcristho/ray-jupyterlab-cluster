version: "3"

services:
  admin:
    build:
      context: .
      dockerfile: ./admin/docker/Dockerfile.jupyterhub
      args:
        JUPYTERHUB_VERSION: latest
    restart: always
    image: jupyterhub
    # container_name: jupyterhub
    ports:
      - "8000:8000"
    deploy:
      placement:
        constraints:
          - node.role == manager
    environment:
      JUPYTERHUB_ADMIN: admin
      DOCKER_NETWORK_NAME: jupyterhub-network
      DOCKER_NOTEBOOK_IMAGE: quay.io/jupyter/base-notebook:latest
      DOCKER_NOTEBOOK_DIR: /home/jovyan/work
    networks:
      - jupyterhub-network
    volumes:
      - "./admin/config/jupyterhub_config.py:/srv/jupyterhub/jupyterhub_config.py:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:rw"
      - "jupyterhub-data:/data"

  worker:
    # build:
    #   context: ./worker
    #   dockerfile: Dockerfile
    image: royyana/progjar-jupyter:latest
    user: root
    privileged: true
    working_dir: /home/jovyan/work
    deploy:
      mode: global
    environment:
      - "GRANT_SUDO=yes"
    volumes:
      - ./work:/home/jovyan/work
    networks:
      - jupyterhub-network

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    # container_name: prometheus
    command:
      - --storage.tsdb.retention.time=30d
      - --config.file=/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    volumes:
      - '/proc:/host/proc:ro'
      - '/sys:/host/sys:ro'
      - '/:/rootfs:ro'
      - './admin/prometheus:/etc/prometheus'
      - prometheus_data:/prometheus
    networks:
      - jupyterhub-network

  grafana:
    image: grafana/grafana:latest
    # container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - jupyterhub-network

volumes:
  jupyterhub-data:
  prometheus_data:
  grafana_data:

networks:
  jupyterhub-network:
    driver: overlay
    attachable: true